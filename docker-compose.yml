services:
  fastapi-app:
    container_name: fastapi-app
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - path: .env
        required: true
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://172.21.0.6:5000"
        tag: "fastapi"
    depends_on:
      db:
        condition: service_healthy
      logstash:
        condition: service_started
    networks:
      devops_mynetwork:
        ipv4_address: 172.21.0.3
    restart: unless-stopped

  db:
    container_name: db
    image: postgres:16
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - pg_data:/var/lib/postgresql/data
    env_file:
      - path: .env
        required: true
    ports:
      - "${DB_PORT_EXTERNAL}:${DB_PORT_INTERNAL}"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $DB_USER -d $DB_NAME" ]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      devops_mynetwork:
        ipv4_address: 172.21.0.4
    restart: unless-stopped

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false  # отключаем безопасность для dev
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - es_data:/usr/share/elasticsearch/data
    networks:
      devops_mynetwork:
        ipv4_address: 172.21.0.5

  logstash:
    image: docker.elastic.co/logstash/logstash:8.11.3
    container_name: logstash
    ports:
      - "5000:5000/udp"  # для GELF
      - "5044:5044"      # для Beats/Filebeat (не обязательно)
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
    depends_on:
      - elasticsearch
    networks:
      devops_mynetwork:
        ipv4_address: 172.21.0.6

  kibana:
    image: docker.elastic.co/kibana/kibana:8.12.0
    container_name: kibana
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    networks:
      devops_mynetwork:
        ipv4_address: 172.21.0.7

volumes:
  pg_data:
    driver: local
  es_data:

networks:
  devops_mynetwork:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.21.0.0/24
          gateway: 172.21.0.1
