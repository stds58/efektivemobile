services:
  setup:
    container_name: setup
    profiles:
      - setup
    build:
      context: elk/setup/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    init: true
    volumes:
      - ./elk/setup/entrypoint.sh:/entrypoint.sh:ro,Z
      - ./elk/setup/lib.sh:/lib.sh:ro,Z
      - ./elk/setup/roles:/roles:ro,Z
    environment:
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
      LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-}
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
      METRICBEAT_INTERNAL_PASSWORD: ${METRICBEAT_INTERNAL_PASSWORD:-}
      FILEBEAT_INTERNAL_PASSWORD: ${FILEBEAT_INTERNAL_PASSWORD:-}
      HEARTBEAT_INTERNAL_PASSWORD: ${HEARTBEAT_INTERNAL_PASSWORD:-}
      MONITORING_INTERNAL_PASSWORD: ${MONITORING_INTERNAL_PASSWORD:-}
      BEATS_SYSTEM_PASSWORD: ${BEATS_SYSTEM_PASSWORD:-}
    network_mode: service:elasticsearch
    depends_on:
      - elasticsearch

  elasticsearch:
    container_name: elasticsearch
    build:
      context: elk/elasticsearch/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
      - ./elk/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,Z
      - elasticsearch:/usr/share/elasticsearch/data:Z
    ports:
      - 9200:9200
      - 9300:9300
#    expose:
#      - "9200"
    environment:
      node.name: elasticsearch
      ES_JAVA_OPTS: -Xms512m -Xmx512m
      # Bootstrap password.
      # Used to initialize the keystore during the initial startup of
      # Elasticsearch. Ignored on subsequent runs.
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
      # see: https://www.elastic.co/docs/deploy-manage/deploy/self-managed/bootstrap-checks
      discovery.type: single-node
    networks:
      devops_mynetwork:
        ipv4_address: 172.21.0.5
    restart: unless-stopped

  logstash:
    container_name: logstash
    build:
      context: elk/logstash/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
      - ./elk/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro,Z
      - ./elk/logstash/pipeline:/usr/share/logstash/pipeline:ro,Z
    ports:
      - 5000:5000/udp    # для GELF
      - 5044:5044        # для Beats/Filebeat (не обязательно)
      - 50000:50000/tcp
      - 50000:50000/udp
      - 8080:8080        # браузер на локалке
      - 9600:9600
    environment:
      LS_JAVA_OPTS: -Xms256m -Xmx256m
      LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-}
    networks:
      devops_mynetwork:
        ipv4_address: 172.21.0.6
    depends_on:
      - elasticsearch
    restart: unless-stopped

  kibana:
    container_name: kibana
    build:
      context: elk/kibana/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
      - ./elk/kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,Z
      #- ./elk/kibana/pipeline/fastapi-logs.ndjson:/usr/share/kibana/config/pipeline/fastapi-logs.ndjson
      #- ./elk/kibana/import-saved-objects.sh:/tmp/import-saved-objects.sh
    ports:
      - 5601:5601
    environment:
      #ELASTICSEARCH_HOSTS: http://elasticsearch:9200
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
      KIBANA_XPACK_SECURITY_ENCRYPTIONKEY: ${KIBANA_XPACK_SECURITY_ENCRYPTIONKEY}
      KIBANA_XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY: ${KIBANA_XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY}
      KIBANA_XPACK_REPORTING_ENCRYPTIONKEY: ${KIBANA_XPACK_REPORTING_ENCRYPTIONKEY}
    networks:
      devops_mynetwork:
        ipv4_address: 172.21.0.7
    depends_on:
      - elasticsearch
    restart: unless-stopped

  kibana-init:
    profiles:
      - kibanainit
    image: curlimages/curl
    depends_on:
      - kibana
    environment:
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
    volumes:
      - ./elk/kibana/pipeline/fastapi-logs.ndjson:/data.ndjson:ro
    command: >
      sh -c '
            echo "Ждём Kibana..." &&
            until curl -sf http://localhost:5601/api/status; do sleep 5; done &&
            echo "Импорт..." &&
            curl -X POST "http://localhost:5601/api/saved_objects/_import?overwrite=true" \
              -H "kbn-xsrf: true" \
              -u "elastic:$${ELASTIC_PASSWORD}" \
              -F "file=@/data.ndjson"
          '
    network_mode: service:kibana

volumes:
  elasticsearch:
